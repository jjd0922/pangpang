<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newper.mapper.OrdersMapper">
    <sql id="includeOrderDatatable">
        <if test="gBarcode != null and gBarcode != ''">AND G_BARCODE LIKE CONCAT('%', #{gBarcode}, '%')</if>
    </sql>
    <select id="selectOrderDatatable" resultType="map">
        SELECT
            O_IDX, O_CODE, SHOP_NAME, CU_ID, CU_NAME,
            CU_PHONE, O_NAME, O_PHONE, O_TEL, O_LOCATION,
            PAY_STATE, (PAY_JSON->>'$.pay_method') AS PAY_METHOD,
            (PAY_JSON->>'$.pg_tid') AS PG_TID,
            (PAY_JSON->>'$.pg_tid2') AS PG_TID2,
            SPO_SHOP_PRICE_SUM, (SPO_SHOP_PRICE_SUM-SPO_PRICE_SUM) AS SPO_EVENT,
            (PAY_COUPON_PRICE+PAY_COUPON_DELIVERY) AS COUPON_SUM,
            PAY_MILEAGE, PAY_POINT, PAY_TOTAL, PAY_PLUS_MILEAGE, PAY_DELIVERY,
            if(PAY_STATE='결제취소',PAY_TOTAL,0) AS PAY_CANCEL_TOTAL,
            AD_NAME, AD_PHONE, POST, CONCAT(ADDR1,' ',ADDR2,' ',ADDR3) AS ADDRS,
            ADDR4, AD_ENTRANCE, O_DATE, O_TIME
        FROM
            orders
                LEFT JOIN customer
                    ON CU_IDX=O_CU_IDX
                LEFT JOIN shop
                    ON O_SHOP_IDX=SHOP_IDX
                LEFT JOIN order_address
                    ON O_AD_IDX=AD_IDX
                LEFT JOIN payment
                    ON O_PAY_IDX=PAY_IDX
                LEFT JOIN order_gs_group
                    ON OGG_O_IDX=O_IDX
                LEFT JOIN (SELECT
                            OG_OGG_IDX,
                            SUM(SPO_SHOP_PRICE) SPO_SHOP_PRICE_SUM, SUM(SPO_PRICE) SPO_PRICE_SUM
                            FROM
                            order_gs
                            LEFT JOIN shop_product_option
                            ON OG_SPO_IDX=SPO_IDX
                            LEFT JOIN goods_stock
                            ON SPO_GS_IDX=GS_IDX
                            GROUP BY OG_OGG_IDX)dt
                    ON OGG_IDX=dt.OG_OGG_IDX

        order by O_IDX desc
        <if test="length!=-1">
            limit #{start},#{length}
        </if>
    </select>
    <select id="countOrderDatatable" resultType="Integer">
        SELECT
            count(*)
        FROM
            orders
                LEFT JOIN customer
                          ON CU_IDX=O_CU_IDX
                LEFT JOIN shop
                          ON O_SHOP_IDX=SHOP_IDX
                LEFT JOIN order_address
                          ON O_AD_IDX=AD_IDX
                LEFT JOIN payment
                          ON O_PAY_IDX=PAY_IDX
                LEFT JOIN order_gs_group
                          ON OGG_O_IDX=O_IDX
                LEFT JOIN (SELECT
                               OG_OGG_IDX,
                               SUM(SPO_SHOP_PRICE) SPO_SHOP_PRICE_SUM, SUM(SPO_PRICE) SPO_PRICE_SUM
                           FROM
                               order_gs
                                   LEFT JOIN shop_product_option
                                             ON OG_SPO_IDX=SPO_IDX
                                   LEFT JOIN goods_stock
                                             ON SPO_GS_IDX=GS_IDX
                           GROUP BY OG_OGG_IDX)dt
                          ON OGG_IDX=dt.OG_OGG_IDX

    </select>

    <select id="selectOrderDetail" resultType="map">
        SELECT
            O_IDX, O_CODE, SHOP_NAME, CU_ID, CU_NAME,
            CU_PHONE, O_NAME, O_PHONE, O_TEL, O_LOCATION,
            PAY_STATE, (PAY_JSON->>'$.pay_method') AS PAY_METHOD,
            ifnull((PAY_JSON->>'$.pg_tid'),'') AS PG_TID,
            ifnull((PAY_JSON->>'$.pg_tid2'),'') AS PG_TID2,
            SPO_SHOP_PRICE_SUM, (SPO_SHOP_PRICE_SUM-SPO_PRICE_SUM) AS SPO_EVENT,
            (PAY_COUPON_PRICE+PAY_COUPON_DELIVERY) AS COUPON_SUM,
            PAY_MILEAGE, PAY_POINT, PAY_TOTAL, PAY_PLUS_MILEAGE, PAY_DELIVERY,
            if(PAY_STATE='결제취소',PAY_TOTAL,0) AS PAY_CANCEL_TOTAL,
            AD_NAME, AD_PHONE, POST, ADDR1, ADDR2, ADDR3,
            ADDR4, AD_ENTRANCE, O_DATE, O_TIME, CU_IDX,
            AD_MEMO
        FROM
            orders
                LEFT JOIN customer
                          ON CU_IDX=O_CU_IDX
                LEFT JOIN shop
                          ON O_SHOP_IDX=SHOP_IDX
                LEFT JOIN order_address
                          ON O_AD_IDX=AD_IDX
                LEFT JOIN payment
                          ON O_PAY_IDX=PAY_IDX
                LEFT JOIN order_gs_group
                          ON OGG_O_IDX=O_IDX
                LEFT JOIN (SELECT
                               OG_OGG_IDX,
                               SUM(SPO_SHOP_PRICE) SPO_SHOP_PRICE_SUM, SUM(SPO_PRICE) SPO_PRICE_SUM
                           FROM
                               order_gs
                                   LEFT JOIN shop_product_option
                                             ON OG_SPO_IDX=SPO_IDX
                                   LEFT JOIN goods_stock
                                             ON SPO_GS_IDX=GS_IDX
                           GROUP BY OG_OGG_IDX)dt
                          ON OGG_IDX=dt.OG_OGG_IDX
        where
            O_IDX=#{O_IDX}
    </select>

    <select id="selectGoodsStockDetailByOIdx" resultType="map">
        SELECT
            P_IDX,O_STATE,PAY_CANCEL_STATE,SP_IDX,GS_CODE,
            ifnull(G_BARCODE,'') as G_BARCODE, P_NAME, SP_NAME,
            if(P_OPTION!='',ifnull(regexp_replace((P_OPTION->>'$[0].values'),'"|\\[|\\]',''),''),'') OPTION1,
            if(P_OPTION!='',ifnull(regexp_replace((P_OPTION->>'$[1].values'),'"|\\[|\\]',''),''),'') OPTION2,
            if(P_OPTION!='',ifnull(regexp_replace((P_OPTION->>'$[2].values'),'"|\\[|\\]',''),''),'') OPTION3,
            G_STATE, GS_PRICE, SPO_PRICE, SPO_SHOP_PRICE, (SPO_SHOP_PRICE-SPO_PRICE) AS DISCOUNT,
            ori.OG_POINT, ori.OG_MILEAGE, ori.OG_DELIVERY, ori.OG_COUPON_PRICE, ori.OG_COUPON_DELIVERY,
            ori.OG_PLUS_MILEAGE, ori.OG_IDX
        FROM
            orders
            LEFT JOIN order_gs_group
            ON OGG_O_IDX=O_IDX
            LEFT JOIN order_gs ori
            ON ori.OG_OGG_IDX=OGG_IDX
            left JOIN order_gs child
            ON ori.OG_OG_IDX=child.OG_IDX
            LEFT JOIN shop_product_option
            ON ori.OG_SPO_IDX=SPO_IDX
            LEFT JOIN shop_product_add
            ON SPO_SPA_IDX=SPA_IDX
            LEFT JOIN shop_product
            ON SPA_SP_IDX=SP_IDX
            LEFT JOIN goods_stock
            ON SPO_GS_IDX=GS_IDX
            LEFT JOIN product
            ON GS_P_IDX=P_IDX
            LEFT JOIN payment
            ON PAY_IDX=O_PAY_IDX
            LEFT JOIN goods
            ON ori.OG_G_IDX=G_IDX
        where
            O_IDX=#{O_IDX}
        <if test="length!=-1">
            limit #{start},#{length}
        </if>
    </select>

    <select id="selectOrderShopDatatable" resultType="map">
        SELECT
            P_IDX,O_STATE,PAY_CANCEL_STATE,SP_IDX,O_IDX,O_CODE
            GS_CODE, ifnull(G_AJ_BARCODE,'') as G_AJ_BARCODE, P_NAME, SP_NAME,P_NAME,
            if(P_OPTION!='',ifnull(regexp_replace(JSON_EXTRACT(P_OPTION,'$[0].values'),'"|\\[|\\]',''),''),'') OPTION1,
            if(P_OPTION!='',ifnull(regexp_replace(JSON_EXTRACT(P_OPTION,'$[1].values'),'"|\\[|\\]',''),''),'') OPTION2,
            if(P_OPTION!='',ifnull(regexp_replace(JSON_EXTRACT(P_OPTION,'$[2].values'),'"|\\[|\\]',''),''),'') OPTION3,
            G_STATE, GS_PRICE, (GS_PRICE-SPO_PRICE) AS DISCOUNT, OG_COUPON, OG_MILEAGE,
            OG_POINT, truncate(PAY_DELIVERY/(SELECT COUNT(*) FROM orders LEFT JOIN order_gs ON OG_O_IDX=O_IDX),0) AS DELIVERY,
            (GS_PRICE-(GS_PRICE-SPO_PRICE)-OG_COUPON-OG_MILEAGE-OG_POINT+truncate(PAY_DELIVERY/(SELECT COUNT(*) FROM orders LEFT JOIN order_gs ON OG_O_IDX=O_IDX),0)) AS TOTAL,
            truncate(PAY_MILEAGE/truncate(PAY_DELIVERY/(SELECT COUNT(*) FROM orders LEFT JOIN order_gs ON OG_O_IDX=O_IDX),0),0) MILEAGE,
            OG_IDX
        FROM
             orders
                LEFT JOIN order_gs
                    ON OG_O_IDX=O_IDX
                LEFT JOIN shop_product_option
                    ON OG_SPO_IDX=SPO_IDX
                LEFT JOIN goods_stock
                    ON SPO_GS_IDX=GS_IDX
                LEFT JOIN delivery_num
                    ON OG_DN_IDX=DN_IDX
                LEFT JOIN product
                    ON GS_P_IDX=P_IDX
                LEFT JOIN payment
                    ON O_PAY_IDX=PAY_IDX
                LEFT JOIN shop_product_add
                    ON SPO_SPA_IDX=SPA_IDX
                LEFT JOIN shop_product
                    ON SPA_SP_IDX=SP_IDX
                LEFT JOIN goods
                    ON G_GS_IDX=GS_IDX

    </select>

    <select id="countOrderShopDatatable" resultType="integer">
        SELECT
            count(*)
        FROM
        orders
        LEFT JOIN order_gs
        ON OG_O_IDX=O_IDX
        LEFT JOIN shop_product_option
        ON OG_SPO_IDX=SPO_IDX
        LEFT JOIN goods_stock
        ON SPO_GS_IDX=GS_IDX
        LEFT JOIN delivery_num
        ON OG_DN_IDX=DN_IDX
        LEFT JOIN product
        ON GS_P_IDX=P_IDX
        LEFT JOIN payment
        ON O_PAY_IDX=PAY_IDX
        LEFT JOIN shop_product_add
        ON SPO_SPA_IDX=SPA_IDX
        LEFT JOIN shop_product
        ON SPA_SP_IDX=SP_IDX
        LEFT JOIN goods
        ON G_GS_IDX=GS_IDX

    </select>
    
    <select id="selectOrderGsDetailByOCodeAndGsCode" resultType="Long">
        SELECT
            OG_IDX
        FROM
            order_gs
                LEFT JOIN orders
                          ON O_IDX=OG_O_IDX
                LEFT JOIN goods
                          ON OG_G_IDX=G_IDX
                LEFT JOIN shop_product_option
                          ON SPO_IDX=OG_SPO_IDX
                LEFT JOIN goods_stock
                          ON SPO_GS_IDX=GS_IDX
                LEFT JOIN delivery_num
                          ON DN_IDX=OG_DN_IDX
        WHERE
            O_CODE=#{O_CODE}
            AND GS_CODE=#{GS_CODE}
            <if test="G_BARCODE!=''">and G_BARCODE=#{G_BARCODE}</if>
    </select>

    <select id="selectGoodsGsDetailByOIdxAndPType" resultType="map">
        select
            OG_IDX, P_IDX, SHOP_NAME, P_NAME, O_NAME,
            O_PHONE, DN_COMPANY, DN_NUM, G_BARCODE, GS_CODE,
            DN_RELEASE
        from
            order_gs
            left join orders
        on O_IDX=OG_O_IDX
            left join shop
            on O_SHOP_IDX=SHOP_IDX
            left join shop_product_option
            on OG_SPO_IDX=SPO_IDX
            left join goods_stock
            on SPO_GS_IDX=GS_IDX
            left join product
            on GS_P_IDX=P_IDX
            left join delivery_num
            on OG_DN_IDX=DN_IDX
            left join goods
            on OG_G_IDX=G_IDX
        where
            OG_O_IDX=#{O_IDX}
            and P_DEL_TYPE=#{P_DEL_TYPE}
    </select>

    <select id="selectOrdersListByBeforeRelease" resultType="map">
        select
            O_IDX,O_CODE
        from
            orders
                LEFT JOIN (SELECT OG_O_IDX FROM order_gs
                            LEFT JOIN shop_product_option
                                      ON OG_SPO_IDX=SPO_IDX
                            LEFT JOIN goods_stock
                                      ON SPO_GS_IDX=GS_IDX
                            LEFT JOIN delivery_num
                                      ON OG_DN_IDX=DN_IDX
                            LEFT JOIN product
                                      ON GS_P_IDX=P_IDX
                           WHERE	P_DEL_TYPE='DELIVERY'
                           GROUP BY OG_O_IDX)dt
                          ON dt.OG_O_IDX=O_IDX
        where
            O_STATE in ('BEFORE','DONE','READY')
    </select>

    <select id="selectOrderGsDetailByOIdxAndGBarcode" resultType="map">
        SELECT
            O_IDX,OG_IDX,G_BARCODE,G_IDX
        FROM
            orders
                LEFT JOIN order_gs
                          ON OG_O_IDX=O_IDX
                LEFT JOIN goods
                          ON OG_G_IDX=G_IDX
                LEFT JOIN delivery_num
                          ON OG_DN_IDX=DN_IDX
        WHERE
            O_IDX=#{O_IDX}
          AND G_BARCODE=#{G_BARCODE}
          and DN_RELEASE is null
    </select>

    <select id="selectOrdersReleaseDateByOIdxAndPDelType" resultType="map">
        SELECT
            DN_RELEASE
        FROM
            orders
                LEFT JOIN order_gs
                          ON O_IDX=OG_O_IDX
                LEFT JOIN delivery_num
                          ON OG_DN_IDX=DN_IDX
                LEFT JOIN shop_product_option
                          ON OG_SPO_IDX=SPO_IDX
                LEFT JOIN goods_stock
                          ON SPO_GS_IDX=GS_IDX
                LEFT JOIN product
                          ON GS_P_IDX=P_IDX

        WHERE
            P_DEL_TYPE=#{P_DEL_TYPE}
          and O_IDX=#{O_IDX}
    </select>


    <select id="selectServiceGoodsDatatable" resultType="Map">
        SELECT
            *,

            PAINT.PN_IDX AS PAINT_IDX,
            PAINT.PN_CONTENT AS PAINT_CONTENT,
            PAINT.PN_EXPECTED_COST AS PAINT_COST,
            PAINT.PN_PROCESS AS PAINT_PROCESS,

            FIX.PN_IDX AS FIX_IDX,
            FIX.PN_CONTENT AS FIX_CONTENT,
            FIX.PN_EXPECTED_COST AS FIX_COST,
            FIX.PN_PROCESS AS FIX_PROCESS,

            PROCESS.PN_IDX AS PROCESS_IDX,
            PROCESS.PN_CONTENT AS PROCESS_CONTENT,
            PROCESS.PN_EXPECTED_COST AS PROCESS_COST,
            PROCESS.PN_PROCESS AS PROCESS_PROCESS,

            IF(PAINT.PN_STATE IS NULL, '', IF(PAINT.PN_STATE = 'COMPLETE' OR PAINT.PN_PROCESS = 'N', 'N', 'Y')) AS PAINT_PROCESS2,
            IF(FIX.PN_STATE IS NULL, '', IF(FIX.PN_STATE = 'COMPLETE' OR FIX.PN_PROCESS = 'N', 'N', 'Y')) AS FIX_PROCESS2,
            IF(PROCESS.PN_STATE IS NULL, '', IF(PROCESS.PN_STATE = 'COMPLETE' OR PROCESS.PN_PROCESS = 'N', 'N', 'Y')) AS PROCESS_PROCESS2,
            PAINT.PN_EXPECTED_COST+FIX.PN_EXPECTED_COST+PROCESS.PN_EXPECTED_COST AS TOTAL_COST
        FROM
            AFTER_SERVICE
                LEFT JOIN ORDER_GS ON AS_OG_IDX = OG_IDX
                LEFT JOIN ORDER_GS_GROUP ON OG_OGG_IDX = OGG_IDX
                LEFT JOIN ORDERS ON OGG_O_IDX = O_IDX
                LEFT JOIN GOODS ON OG_G_IDX = G_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PROCESS_NEED AS PAINT ON AS_IDX = PAINT.PN_AS_IDX AND PAINT.PN_TYPE = 'PAINT'
                LEFT JOIN PROCESS_NEED AS FIX ON AS_IDX = FIX.PN_AS_IDX AND FIX.PN_TYPE = 'FIX'
                LEFT JOIN PROCESS_NEED AS PROCESS ON AS_IDX = PROCESS.PN_AS_IDX AND PROCESS.PN_TYPE = 'PROCESS'
                LEFT JOIN DELIVERY_NUM AS IN_DELIVERY ON AS_DN_IDX = IN_DELIVERY.DN_IDX
                LEFT JOIN DELIVERY_NUM AS OUT_DELIVERY ON AS_DN_IDX2 = OUT_DELIVERY.DN_IDX
        LIMIT
            #{start}, #{length}
    </select>

    <select id="countServiceGoodsDatatable" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            AFTER_SERVICE
                LEFT JOIN ORDER_GS ON AS_OG_IDX = OG_IDX
                LEFT JOIN ORDER_GS_GROUP ON OG_OGG_IDX = OGG_IDX
                LEFT JOIN ORDERS ON OGG_O_IDX = O_IDX
                LEFT JOIN GOODS ON OG_G_IDX = G_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PROCESS_NEED AS PAINT ON AS_IDX = PAINT.PN_AS_IDX AND PAINT.PN_TYPE = 'PAINT'
                LEFT JOIN PROCESS_NEED AS FIX ON AS_IDX = FIX.PN_AS_IDX AND FIX.PN_TYPE = 'FIX'
                LEFT JOIN PROCESS_NEED AS PROCESS ON AS_IDX = PROCESS.PN_AS_IDX AND PROCESS.PN_TYPE = 'PROCESS'
                LEFT JOIN DELIVERY_NUM AS IN_DELIVERY ON AS_DN_IDX = IN_DELIVERY.DN_IDX
                LEFT JOIN DELIVERY_NUM AS OUT_DELIVERY ON AS_DN_IDX2 = OUT_DELIVERY.DN_IDX
    </select>

    <select id="selectReturnDatatable" resultType="Map">
        SELECT
            *
        FROM
            ORDER_GS_DN
                LEFT JOIN ORDER_GS ON OGDN_OG_IDX = OG_IDX
                LEFT JOIN ORDER_GS_GROUP ON OG_OGG_IDX = OGG_IDX
                LEFT JOIN ORDERS ON OGG_O_IDX = O_IDX
                LEFT JOIN DELIVERY_NUM ON OGDN_DN_IDX = DN_IDX
                LEFT JOIN GOODS ON OG_G_IDX = G_IDX
        <where>
            <include refid="includeOrderDatatable"></include>
        </where>
        LIMIT
            #{start}, #{length}
    </select>

    <select id="countReturnDatatable" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            ORDER_GS_DN
                LEFT JOIN ORDER_GS ON OGDN_OG_IDX = OG_IDX
                LEFT JOIN ORDER_GS_GROUP ON OG_OGG_IDX = OGG_IDX
                LEFT JOIN ORDERS ON OGG_O_IDX = O_IDX
                LEFT JOIN DELIVERY_NUM ON OGDN_DN_IDX = DN_IDX
                LEFT JOIN GOODS ON OG_G_IDX = G_IDX
        <where>
            <include refid="includeOrderDatatable"></include>
        </where>
    </select>

    <select id="selectOrderGsByoIdx" resultType="Map">
        SELECT
            OG_IDX,
            G_BARCODE,
            GS_NAME
        FROM
            ORDERS
                LEFT JOIN ORDER_GS_GROUP ON O_IDX = OGG_O_IDX
                LEFT JOIN ORDER_GS ON OGG_IDX = OG_OGG_IDX
                LEFT JOIN GOODS ON OG_G_IDX = G_IDX
                LEFT JOIN GOODS_STOCK ON G_GS_IDX = GS_IDX
        WHERE
            O_IDX = #{oIdx}
    </select>
</mapper>