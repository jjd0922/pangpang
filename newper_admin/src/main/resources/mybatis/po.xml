<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newper.mapper.PoMapper">
    <sql id="includeEstimateDataTable">
        <if test='peName != null and peName != ""'>AND PE_NAME LIKE CONCAT('%',#{peName},'%')</if>
        <if test='comName != null and comName != ""'>AND COM_NAME LIKE CONCAT('%',#{comName},'%')</if>
        <if test='peCode != null and peCode != ""'>AND PE_CODE LIKE CONCAT('%',#{peCode},'%')</if>
        <if test='createdBy != null and createdBy != ""'>AND PO_ESTIMATE.CREATED_BY LIKE CONCAT('%',#{createdBy},'%')</if>
        <if test='createdDate != null and createdDate != ""'>AND PO_ESTIMATE.CREATED_DATE BETWEEN SUBSTR(#{createdDate}, 1, 10) AND SUBSTR(#{createdDate}, 13)</if>
        <if test='modifiedBy != null and modifiedBy != ""'>AND PO_ESTIMATE.MODIFIED_BY LIKE CONCAT('%',#{modifiedBy},'%')</if>
        <if test='modifiedDate != null and modifiedDate != ""'>AND PO_ESTIMATE.MODIFIED_DATE BETWEEN SUBSTR(#{modifiedDate}, 1, 10) AND SUBSTR(#{modifiedDate}, 13)</if>
        <if test="pePeriod != null and pePeriod != ''">
            AND (PE_START BETWEEN SUBSTR(#{pePeriod}, 1, 10) AND SUBSTR(#{pePeriod}, 13) OR
                PE_END BETWEEN SUBSTR(#{pePeriod}, 1, 10) AND SUBSTR(#{pePeriod}, 13))
        </if>
        <if test='peState != null'>
            <foreach collection="peState" open="AND PE_STATE IN (" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
    </sql>
    <select id="selectEstimateDataTable" resultType="Map">
        SELECT
            PE_IDX,
            PE_CODE,
            PE_STATE,
            COM_NAME,
            PE_NAME,
            FORMAT(PE_COUNT , 0) AS 'PE_COUNT',
            FORMAT(PE_COST , 0) AS 'PE_COST',
            PE_FILE,
            PE_FILE_NAME,
            CONCAT(PE_START, ' ~ ', PE_END) AS 'PE_PERIOD',
            PO_ESTIMATE.CREATED_BY AS 'CREATED_BY',
            PO_ESTIMATE.CREATED_DATE AS 'CREATED_DATE',
            PO_ESTIMATE.MODIFIED_BY AS 'MODIFIED_BY',
            PO_ESTIMATE.MODIFIED_DATE AS 'MODIFIED_DATE'
        FROM
            po_estimate
                LEFT JOIN company ON PE_COM_IDX = COM_IDX
        WHERE
            PE_IDX IS NOT NULL
            <include refid="includeEstimateDataTable"></include>
        <if test="length!=-1">
            LIMIT #{start},#{length}
        </if>
    </select>

    <select id="countEstimateDataTable" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            po_estimate
                LEFT JOIN company ON PE_COM_IDX = COM_IDX
        WHERE
            PE_IDX IS NOT NULL
            <include refid="includeEstimateDataTable"></include>
    </select>

    <select id="selectEstimateProduct" resultType="Map">
        SELECT
            P_IDX,
            P_NAME,
            brand.CATE_NAME AS 'BRAND',
            category.CATE_NAME AS 'CATEGORY',
            P_SELL_PRICE,
            FORMAT(P_SELL_PRICE , 0) AS 'P_SELL_PRICE_COMMA',
            PEP_COUNT,
            PEP_COST,
            FORMAT(PEP_COUNT * PEP_COST , 0) AS 'SUM'
        FROM
            po_estimate
                LEFT JOIN po_estimate_product ON PE_IDX = PEP_PE_IDX
                LEFT JOIN product ON PEP_P_IDX = P_IDX
                LEFT JOIN category AS category ON P_CATE_IDX = category.CATE_IDX
                LEFT JOIN category AS brand ON P_CATE_IDX2 = brand.CATE_IDX
        WHERE
            PE_IDX = #{peIdx}
        AND
            PEP_IDX IS NOT NULL
    </select>

    <sql id="includePoDataTable">
        <if test="poState != null and poState != ''">
            <foreach collection="poState" open="AND PO_STATE IN (" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="uName != null and uName != ''">
            AND U_NAME = #{uName}
        </if>

        <if test="comName != null and comName != ''">
            AND BUY.COM_NAME LIKE CONCAT ('%', #{comName}, '%')
        </if>

        <if test="poInDate != null and poInDate != ''">
            AND PO_IN_DATE BETWEEN SUBSTR(#{poInDate}, 1, 10) AND SUBSTR(#{poInDate}, 13)
        </if>
        <if test="poDueDate != null and poDueDate != ''">
            AND PO_DUE_DATE BETWEEN SUBSTR(#{poDueDate}, 1, 10) AND SUBSTR(#{poDueDate}, 13)
        </if>

        <if test="poRefundDate != null and poRefundDate != ''">
            AND PO_REFUND_DATE BETWEEN SUBSTR(#{poRefundDate}, 1, 10) AND SUBSTR(#{poRefundDate}, 13)
        </if>

        <if test="poAsDate != null and poAsDate != ''">
            AND PO_AS_DATE BETWEEN SUBSTR(#{poAsDate}, 1, 10) AND SUBSTR(#{poAsDate}, 13)
        </if>

        <if test="poRepurchase != null and poRepurchase != ''">
            AND PO_REPURCHASE = #{poRepurchase}
        </if>

        <if test="createdBy != null and createdBy != ''">
            AND po.CREATED_BY LIKE CONCAT ('%', #{createdBy}, '%')
        </if>

        <if test="createdDate != null and createdDate != ''">
            AND PO.CREATED_DATE BETWEEN SUBSTR(#{createdDate}, 1, 10) AND SUBSTR(#{createdDate}, 13)
        </if>

        <if test="createdBy != null and createdBy != ''">
            AND po.CREATED_BY LIKE CONCAT ('%', #{createdBy}, '%')
        </if>

        <if test="createdDate != null and createdDate != ''">
            AND PO.CREATED_DATE BETWEEN SUBSTR(#{createdDate}, 1, 10) AND SUBSTR(#{createdDate}, 13)
        </if>

        <if test="modifiedBy != null and modifiedBy != ''">
            AND po.MODIFIED_BY LIKE CONCAT ('%', #{modifiedBy}, '%')
        </if>

        <if test="modifiedDate != null and modifiedDate != ''">
            AND PO.MODIFIED_DATE BETWEEN SUBSTR(#{modifiedDate}, 1, 10) AND SUBSTR(#{modifiedDate}, 13)
        </if>

        <if test="hwAprvId != null and hwAprvId != ''">
            AND HW_APRV_ID LIKE CONCAT ('%', #{hwAprvId}, '%')
        </if>

        <if test="hwAprvDate != null and hwAprvDate != ''">
            AND HW_APRV_DATE BETWEEN SUBSTR(#{hwAprvDate}, 1, 10) AND SUBSTR(#{hwAprvDate}, 13)
        </if>

        <if test="poState != null and poState != ''">
            AND PO_STATE = #{poState}
        </if>
    </sql>
    <select id="selectPoDataTable" resultType="Map">
        SELECT
            PO_IDX,
            PO_STATE,
            U_NAME,
            BUY.COM_NUM,
            PO_TOTAL_AMOUNT,
            PO_SELL_PROFIT,
            PO_SELL_TOTAL_AMOUNT,
            PO_DELIVERY_MAIN,
            PO_IN_DATE,
            PO_DUE_DATE,
            PO_REFUND_DATE,
            PO_AS_DATE,
            PO_BUY_SELL_PERIOD,
            PO_REPURCHASE,
            po.CREATED_BY AS 'CREATED_BY',
            po.CREATED_BY AS 'CREATED_DATE',
            hiworks.HW_APRV_ID AS 'HW_APRV_ID',
            hiworks.HW_APRV_DATE AS 'HW_APRV_DATE',
            po.MODIFIED_BY AS 'MODIFIED_BY',
            po.MODIFIED_DATE AS 'MODIFIED_DATE'
        FROM
            po
                LEFT JOIN company AS BUY ON PO_COM_IDX = BUY.COM_IDX
                LEFT JOIN company AS SELL ON PO_SELL_COM_IDX = SELL.COM_IDX
                LEFT JOIN hiworks ON PO_HW_IDX = HW_IDX
                LEFT JOIN user ON HW_U_IDX = U_IDX
        <where>
            <include refid="includePoDataTable"></include>
        </where>
        ORDER BY
            PO_IDX DESC
        <if test="length!=-1">
        LIMIT
            #{start},#{length}
        </if>
    </select>
    <select id="countPoDataTable" parameterType="map" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            PO
        <where>
            <include refid="includePoDataTable"></include>
        </where>
    </select>

    <sql id="includeInDatatable">
        (PO_TYPE = 'EMERGENCY' OR PO_STATE = 'APPROVAL')
    </sql>
    <select id="selectInDatatable" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            PO
                LEFT JOIN warehouse ON PO_WH_IDX = WH_IDX
                LEFT JOIN company ON PO_COM_IDX = COM_IDX
        <where>
            <include refid="includeInDatatable"></include>
        </where>
    </select>
    <select id="countInDatatable" parameterType="map" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            PO
                LEFT JOIN warehouse ON PO_WH_IDX = WH_IDX
                LEFT JOIN company ON PO_COM_IDX = COM_IDX
        <where>
            <include refid="includeInDatatable"></include>
        </where>
    </select>
    <sql id="includePoApprovedDatatable">
        (PO_TYPE = 'EMERGENCY' OR HW_STATE = 'APPROVED')

    </sql>
    <select id="selectPoApprovedDatatable" resultType="map" parameterType="map">
        SELECT
            PO_IDX,
            PO_STATE
        FROM
            PO
                LEFT JOIN HIWORKS ON PO_HW_IDX = HW_IDX
        <where>
            <include refid="includePoApprovedDatatable"></include>
        </where>

        <if test="length!=-1">
            LIMIT #{start},#{length}
        </if>
    </select>
    <select id="countPoApprovedDatatable" resultType="Integer" parameterType="map">
        SELECT
            COUNT(*)
        FROM
            PO
                LEFT JOIN HIWORKS
                    ON PO_HW_IDX=HW_IDX
        <where>
            <include refid="includePoApprovedDatatable"></include>
        </where>
    </select>
    <select id="selectInPoDatatable" resultType="map" parameterType="map">
        SELECT
            P_IDX,
            P_NAME,
            PP_OPTION,
            P_SELL_PRICE,
            PP_COST,
            PP_COUNT,
            PP_COST * PP_COUNT PP_TOTAL,
            BUY.SPEC_CONFIRM SPEC_BUY,
            SELL.SPEC_CONFIRM SPEC_SELL
        FROM
            PO
                LEFT JOIN PO_PRODUCT ON PO_IDX = PP_PO_IDX
                LEFT JOIN PRODUCT ON PP_P_IDX = P_IDX
                LEFT JOIN SPEC AS BUY ON PP_SPEC_IDX = BUY.SPEC_IDX
                LEFT JOIN SPEC AS SELL ON PP_SPEC_IDX2 = SELL.SPEC_IDX
        WHERE
            PP_PO_IDX = #{po_idx}
        ORDER BY
            PP_IDX
    </select>
    <sql id="includeInPpDatatable">
        PP_IDX = #{ppIdx}
        AND PP_PO_IDX = POR_PO_IDX
        AND G_POR_IDX = POR_IDX
        AND POR_P_IDX = PP_P_IDX
        AND ( POR_PP_IDX IS NULL OR POR_PP_IDX = PP_IDX)
    </sql>
    <select id="selectInPpDatatable" resultType="map" parameterType="map">
        SELECT
            *
        FROM
            PO_PRODUCT, GOODS, PO_RECEIVED
        <where>
            <include refid="includeInPpDatatable"></include>
        </where>

        <if test="length!=-1">
            LIMIT #{start},#{length}
        </if>
    </select>
    <select id="countInPpDatatable" resultType="Integer" parameterType="map">
        SELECT
            COUNT(*)
        FROM
            PO_PRODUCT, GOODS, PO_RECEIVED
        <where>
            <include refid="includeInPpDatatable"></include>
        </where>
    </select>
    <update id="updategoods">
        UPDATE in_group,in_product
        SET IP_COUNT = (SELECT COUNT(*) FROM goods WHERE g_po_idx=#{po_idx} AND g_p_idx=#{p_idx})
        WHERE in_group.IG_IDX=in_product.IP_IG_IDX
            AND ig_po_idx=#{po_idx}
            AND IP_P_IDX=#{p_idx}
    </update>


    <select id="selectPoProductByPoIdx" resultType="Map">
        SELECT
            PP_IDX,
            PO_IDX,
            P_IDX,
            PP_MEMO,
            P_NAME,
            CATE_NAME,
            P_COST,
            PP_COST,
            PP_COUNT,
            BUY.SPEC_CONFIRM SPEC_BUY,
            SELL.SPEC_CONFIRM SPEC_SELL,
            PP_FIX_MEMO,
            PP_FIX_COST,
            PP_PAINT_MEMO,
            PP_PAINT_COST,
            PP_PROCESS_MEMO,
            PP_PROCESS_COST,
            PP_SELL_PRICE,
            PP_PROFIT_TARGET,
            if(P_OPTION!='',ifnull(regexp_replace(JSON_EXTRACT(P_OPTION,'$[0].values'),'"|\\[|\\]',''),''),'') OPTION1,
            if(P_OPTION!='',ifnull(regexp_replace(JSON_EXTRACT(P_OPTION,'$[1].values'),'"|\\[|\\]',''),''),'') OPTION2,
            if(P_OPTION!='',ifnull(regexp_replace(JSON_EXTRACT(P_OPTION,'$[2].values'),'"|\\[|\\]',''),''),'') OPTION3
        FROM
            po_product
                LEFT JOIN PO ON PP_PO_IDX = PO_IDX
                LEFT JOIN product ON PP_P_IDX = P_IDX
                LEFT JOIN category ON P_CATE_IDX2 = CATE_IDX
                LEFT JOIN spec AS BUY ON PP_SPEC_IDX = BUY.SPEC_IDX
                LEFT JOIN spec AS SELL ON PP_SPEC_IDX2 = SELL.SPEC_IDX
        WHERE
            PP_PO_IDX = #{poIdx}
    </select>

    <select id="countPoProductByPoIdx" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            po_product
                LEFT JOIN product ON PP_P_IDX = P_IDX
                LEFT JOIN category ON P_CATE_IDX2 = CATE_IDX
                LEFT JOIN spec AS BUY ON PP_SPEC_IDX = BUY.SPEC_IDX
                LEFT JOIN spec AS SELL ON PP_SPEC_IDX2 = SELL.SPEC_IDX
        WHERE
            PP_PO_IDX = #{poIdx}
    </select>

    <select id="selectInPoProductDatatable" resultType="map" parameterType="map">
        SELECT
            P_IDX, P_NAME, P_MODEL
             ,PP_COUNT
             ,IP_COUNT
        FROM
            PRODUCT
           ,IN_PRODUCT
           ,IN_GROUP
           ,(SELECT PP_P_IDX, SUM(PP_COUNT) PP_COUNT FROM PO_PRODUCT WHERE PP_PO_IDX = #{po_idx} GROUP BY PP_P_IDX) PP
        WHERE
            IG_PO_IDX = #{po_idx}
          AND IP_IG_IDX = IG_IDX
          AND IP_P_IDX = P_IDX
          AND P_IDX = PP_P_IDX
    </select>
    <select id="selectPoProductIdxList" resultType="Integer">
        SELECT DISTINCT(PP_P_IDX) FROM PO_PRODUCT
        WHERE PP_PO_IDX = #{poIdx}
    </select>

    <sql id="includeInProductDatatable">
        G_PO_IDX = #{po_idx}
        AND G_P_IDX = #{p_idx}
    </sql>
    <select id="selectInProductDatatable" resultType="map" parameterType="map">
        SELECT
            *
        FROM
            GOODS
        <where>
            <include refid="includeInProductDatatable"></include>
        </where>
        ORDER BY
        G_IDX desc
        <if test="length!=-1">
            LIMIT #{start},#{length}
        </if>
    </select>
    <select id="countInProductDatatable" resultType="Integer" parameterType="map">
        SELECT
            COUNT(*)
        FROM
            GOODS
        <where>
            <include refid="includeInProductDatatable"></include>
        </where>
    </select>

    <select id="selectPoReceivedByProductAndPoAndSpecAndOption" resultType="com.newper.entity.PoReceived">
        SELECT
            *
        FROM
            PO_RECEIVED
                LEFT JOIN PO ON POR_PO_IDX = PO_IDX
                LEFT JOIN PRODUCT ON POR_P_IDX = P_IDX
                LEFT JOIN SPEC ON POR_IN_SPEC_IDX = SPEC_IDX
                LEFT JOIN PO_PRODUCT ON POR_PP_IDX = PP_IDX AND PP_COUNT - POR_COUNT > 0
        WHERE
            SPEC_IDX = #{specIdx}
        AND
            P_IDX = #{pIdx}
        AND
            POR_OPTION = #{option}
        AND
            PO_IDX = #{poIdx}
    </select>

</mapper>