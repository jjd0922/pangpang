<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newper.mapper.ProcessMapper">
    <sql id="includeProcessNeedDataTable">
        <if test="gIdx != null and gIdx != ''">AND PN_G_IDX = #{gIdx}</if>
        <if test="pgIdx != null and pgIdx != ''">AND PN_PG_IDX = #{pgIdx}</if>
        <if test="pnIdx != null and pnIdx != ''">AND PN_IDX = #{pnIdx}</if>
        <if test="pnType != null and pnType != ''">AND PN_TYPE = #{pnType}</if>
        <if test="pnState != null and pnState != ''">AND PN_STATE = #{pnState}</if>
        <if test="pnProcess != null and pnProcess != ''">AND PN_PROCESS = #{pnProcess}</if>
        <if test="cgIdx != null and cgIdx != ''">AND PN_CG_IDX = #{cgIdx}</if>
    </sql>
    <select id="selectProcessNeed" resultType="Map">
        SELECT
            *
        FROM
            PROCESS_NEED
                LEFT JOIN GOODS ON PN_G_IDX = G_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
        <where>
            <include refid="includeProcessNeedDataTable"></include>
        </where>
    </select>

    <sql id="includeProcessGroupDataTable">
        <if test="pgType != null and pgType != ''">AND PG_TYPE = #{pgType}</if>
    </sql>
    <select id="selectProcessGroupDatatable" resultType="Map">
        SELECT
            *
        FROM
            PROCESS_GROUP
        <where>
            <include refid="includeProcessGroupDataTable"></include>
        </where>
    </select>

    <select id="countProcessGroupDatatable" resultType="long">
        SELECT
            COUNT(*)
        FROM
            PROCESS_GROUP
        <where>
            <include refid="includeProcessGroupDataTable"></include>
        </where>
    </select>


    <sql id="includeProcessSpec">
        <if test="gIdx != null and gIdx != ''">AND G_IDX = #{gIdx}</if>
        <if test="pnCount != null and pnCount != ''">AND PN_COUNT = #{pnCount}</if>
        <if test="pnIdx != null and pnIdx != ''">AND PS_PN_IDX = #{pnIdx}</if>
        <if test='psType != null'>
            <foreach collection="psType" open="AND PS_TYPE IN (" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        AND GS_IDX IS NOT NULL
    </sql>

    <select id="selectProcessSpec" resultType="Map">
        SELECT
            *
        FROM
            PROCESS_NEED
                LEFT JOIN PROCESS_SPEC ON PN_IDX = PS_PN_IDX
                LEFT JOIN GOODS_STOCK ON PS_GS_IDX1 = GS_IDX
                LEFT JOIN PRODUCT ON GS_P_IDX = P_IDX
        <where>
            <include refid="includeProcessSpec"></include>
        </where>
    </select>

    <insert id="insertResellGoods">
        INSERT INTO RESELL_GOODS (
            RG_RS_IDX,
            RG_G_IDX
        ) VALUES
        <foreach collection="gIdxs" item="gIdx" separator=",">
        (
            #{rsIdx},
            #{gIdx}
        )
        </foreach>
    </insert>

    <select id="selectResellComIdx" resultType="Map">
        SELECT
            *
        FROM
            GOODS_TEMP
                LEFT JOIN GOODS ON GT_G_IDX = G_IDX
                LEFT JOIN PO ON G_PO_IDX = PO_IDX
                LEFT JOIN COMPANY ON PO_COM_IDX = COM_IDX
        WHERE
            GT_GGT_IDX = #{ggt_idx}
        LIMIT
	        0, 1
    </select>

    <sql id="includeResellDatatable">
        <if test="rsIdx != null and rdIdx != ''">RS_IDX LIKE CONCAT ('%', #{rsIdx}, '%')</if>
        <if test="rsState != null and rsState != ''">RS_STATE = #{rsState}</if>
        <if test="comName != null and comName != ''">RS_IDX LIKE CONCAT ('%', #{comName}, '%')</if>
        <if test="buy_uName != null and buy_uName != ''">RS_IDX LIKE CONCAT ('%', #{buy_uName}, '%')</if>
        <if test="start_uName != null and start_uName != ''">RS_IDX LIKE CONCAT ('%', #{start_uName}, '%')</if>
        <if test="rgStartDate != null and rgStartDate != ''">RS_IDX LIKE CONCAT ('%', #{rgStartDate}, '%')</if>
        <if test="end_uName != null and end_uName != ''">RS_IDX LIKE CONCAT ('%', #{end_uName}, '%')</if>
        <if test="rgEndDate != null and rgEndDate != ''">RS_IDX LIKE CONCAT ('%', #{rgEndDate}, '%')</if>
        <if test="createdBy != null and createdBy != ''">RS_IDX LIKE CONCAT ('%', #{createdBy}, '%')</if>
        <if test="createdDate != null and createdDate != ''">RS_IDX LIKE CONCAT ('%', #{createdDate}, '%')</if>
    </sql>

    <select id="selectResellDatatable" resultType="Map">
        SELECT
            *
        FROM
            RESELL
                LEFT JOIN COMPANY ON RS_COM_IDX = COM_IDX
        <where>
            <include refid="includeResellDatatable"></include>
        </where>
        <if test="length != -1">
            LIMIT
                #{start}, #{length}
        </if>
    </select>

    <select id="countResellDatatable" resultType="long">
        SELECT
            COUNT(*)
        FROM
            RESELL
                LEFT JOIN COMPANY ON RS_COM_IDX = COM_IDX
        <where>
            <include refid="includeResellDatatable"></include>
        </where>
    </select>

    <select id="selectGoodsResell" resultType="Map">
        SELECT
            *
        FROM
            RESELL
                LEFT JOIN RESELL_GOODS ON RS_IDX = RG_RS_IDX
                LEFT JOIN GOODS ON RG_G_IDX = G_IDX
        <if test="length != -1">
        LIMIT
            #{start}, #{length}
        </if>
    </select>

    <select id="countGoodsResell" resultType="long">
        SELECT
            COUNT(*)
        FROM
            RESELL
                LEFT JOIN RESELL_GOODS ON RS_IDX = RG_RS_IDX
                LEFT JOIN GOODS ON RG_G_IDX = G_IDX
    </select>

    <sql id="includeCheckDatatable">
        <if test="cgType != null and cgType != ''">AND CG_TYPE = #{cgType}</if>
    </sql>
    
    <select id="selectCheckDatatable" resultType="Map">
        SELECT
            *
        FROM
            CHECK_GROUP
        <where>
            <include refid="includeCheckDatatable"></include>
        </where>
        <if test="length != -1">
        LIMIT
            #{start}, #{length}
        </if>
    </select>

    <select id="countCheckDatatable" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            CHECK_GROUP
        <where>
            <include refid="includeCheckDatatable"></include>
        </where>
    </select>

    
    <sql id="includeProcessNeedDatatable">
        <if test="gIdx != null and gIdx != ''">AND G_IDX = #{gIdx}</if>
        <if test="pnCount != null and pnCount != ''">AND PN_COUNT = #{pnCount}</if>
    </sql>
    <select id="selectProcessNeedDatatable" resultType="Map">
        SELECT
            PN_IDX,
            PN_TYPE,
            PN_CONTENT,
            PN_EXPECTED_COST,
            PN_PROCESS
        FROM
            GOODS
                LEFT JOIN PROCESS_NEED ON G_IDX = PN_G_IDX
        <where>
            <include refid="includeProcessNeedDatatable"></include>
        </where>
    </select>

    <select id="goodsProcessCheck" resultType="Map">
        SELECT
            *
        FROM
            PROCESS_NEED
        WHERE
            PN_TYPE = #{type}
        AND
            PN_STATE = 'NEED'
        AND
            PN_PROCESS = 'Y'
        AND
            PN_G_IDX = #{gIdx}
    </select>

    <select id="selectProcessNeedByGoods" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            PROCESS_NEED
        WHERE
            PN_G_IDX = #{gIdx}
        AND
            PN_PROCESS = 'Y'
        AND
            PN_STATE = 'REQUEST'
    </select>

    <select id="selectProcessNeedCount" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            PROCESS_NEED
        WHERE
            PN_G_IDX = #{gIdx}
        AND
            PN_TYPE = #{pnType}
    </select>

    <update id="updateProcessNeedLast">
        UPDATE
            PROCESS_NEED
        SET
            PN_LAST = 0
        WHERE
            PN_G_IDX = #{gIdx}
        AND
            PN_TYPE = #{pnType}
    </update>

    <insert id="insertGoodsTemp">
        INSERT INTO GOODS_TEMP (
            GT_GGT_IDX,
            GT_G_IDX,
            GT_CREATED_DATETIME
        ) VALUES (
            #{ggtIdx},
            #{gIdx},
            NOW()
        )
    </insert>

    <select id="selectGoodsTemp" resultType="Long">
        SELECT
            GT_G_IDX
        FROM
            GOODS_TEMP
        WHERE
            GT_GGT_IDX = #{ggtIdx}
    </select>

    <select id="checkProcessNeed" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            PROCESS_NEED
                LEFT JOIN GOODS ON PN_G_IDX = G_IDX
        WHERE
            PN_TYPE = #{pnType}
        AND
            G_IDX = #{gIdx}
        AND
            PN_STATE = 'NEED'
        AND
            PN_PROCESS = 'Y'
    </select>

    <select id="selectProcessNeedByGroup" resultType="Map">
        SELECT
            G_IDX,
            G_STATE,
            P_IDX,
            P_NAME,
            POR_COST,
            G_BARCODE,
            G_IMEI,
            G_JSON,
            NOW.PN_JSON AS PN_JSON,
            CATE_SPEC_LIST,
            NOW.PN_STATE,
            PP_JSON,
            NOW.PN_IDX,
            NOW.PN_CONTENT,
            PP_JSON ->> '$.inSpec1' AS INSPEC1,
            G_JSON ->> '$.inSpec2' AS INSPEC2,
            PP_JSON ->> '$.sellSpec1' AS SELLSPEC1,
            G_JSON ->> '$.sellSpec2' AS SELLSPEC2,
            PROCESS.PN_JSON ->> '$.pSpec1' AS PSPEC1,
            PROCESS.PN_JSON ->> '$.pSpec2' AS PSPEC2
        FROM
            PROCESS_GROUP
                LEFT JOIN PROCESS_NEED AS NOW ON PG_IDX = NOW.PN_PG_IDX
                LEFT JOIN GOODS ON PN_G_IDX = G_IDX
                LEFT JOIN PROCESS_NEED AS PAINT ON G_IDX = PAINT.PN_G_IDX AND PAINT.PN_TYPE = 'PAINT' AND PAINT.PN_LAST = 1
                LEFT JOIN PROCESS_NEED AS FIX ON G_IDX = FIX.PN_G_IDX AND FIX.PN_TYPE = 'FIX' AND FIX.PN_LAST = 1
                LEFT JOIN PROCESS_NEED AS PROCESS ON G_IDX = PROCESS.PN_G_IDX AND PROCESS.PN_TYPE = 'PROCESS' AND PROCESS.PN_LAST = 1
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PO_RECEIVED ON G_POR_IDX = POR_IDX
                LEFT JOIN PO_PRODUCT ON POR_PP_IDX = PP_IDX
        <where>
            <include refid="includeProcessNeedDataTable"></include>
        </where>
    </select>

    <select id="countProcessNeedByGroup" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            PROCESS_GROUP
                LEFT JOIN PROCESS_NEED ON PG_IDX = PN_PG_IDX
                LEFT JOIN GOODS ON PN_G_IDX = G_IDX
        <where>
            <include refid="includeProcessNeedDataTable"></include>
        </where>
    </select>

    <select id="checkProcessNeedOtherByGoods" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            PROCESS_NEED
        WHERE
            PN_G_IDX = #{gIdx}
        AND
            PN_PROCESS = 'BEFORE'
        AND
            PN_CONTENT != ''
        AND
            PN_EXPECTED_COST != 0
    </select>

    <select id="checkProcessNeedOtherByChecks" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            CHECK_GROUP
                LEFT JOIN CHECK_GOODS ON CG_IDX = CGS_CG_IDX
        WHERE
            CG_IDX = #{cgIdx}
        AND
            CGS_STATE NOT IN (
                'FINISH'
            )
    </select>

    <select id="checkProcessSpec" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            PROCESS_SPEC
                LEFT JOIN PROCESS_NEED ON PS_PN_IDX = PN_IDX
        WHERE
            PS_PN_IDX = #{pnIdx}
    </select>

    <select id="selectCheckGoods" resultType="Map">
        SELECT
            G_IDX,
            G_BARCODE,
            G_STATE,
            PO_IDX,
            P_IDX,
            P_NAME,
            P_COST,
            G_IMEI,
            G_JSON,
            P_OPTION,
            CATE_SPEC_LIST,
            G_IMEI,
            G_MEMO,
            CGS_IDX,
            PP_JSON,
            G_OPTION,
            G_JSON ->> '$.inSpec2' AS INSPEC2,
            (SELECT PN_JSON ->> '$.pSpec1' FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'PROCESS' AND G_IDX = PN_G_IDX) AS PSPEC1,
            (SELECT PN_IDX FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'PAINT' AND G_IDX = PN_G_IDX) AS PAINT_PN_IDX,
            (SELECT PN_JSON ->> '$.paintContent' FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'PAINT' AND G_IDX = PN_G_IDX) AS PAINT_CONTENT,
            @PAINT_COST:=IFNULL((SELECT PN_JSON ->> '$.paintCost' FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'PAINT' AND G_IDX = PN_G_IDX),0) AS PAINT_COST,

            (SELECT PN_IDX FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'FIX' AND G_IDX = PN_G_IDX) AS FIX_PN_IDX,
            (SELECT PN_JSON ->> '$.fixContent' FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'FIX' AND G_IDX = PN_G_IDX) AS FIX_CONTENT,
            @FIX_COST:=IFNULL((SELECT PN_JSON ->> '$.fixCost' FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'FIX' AND G_IDX = PN_G_IDX),0) AS FIX_COST,

            (SELECT PN_IDX FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'PROCESS' AND G_IDX = PN_G_IDX) AS PROCESS_PN_IDX,
            (SELECT PN_JSON ->> '$.processContent' FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'PROCESS' AND G_IDX = PN_G_IDX) AS PROCESS_CONTENT,
            @PROCESS_COST:=IFNULL((SELECT PN_JSON ->> '$.processCost' FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'PROCESS' AND G_IDX = PN_G_IDX),0) AS PROCESS_COST,
            @PAINT_COST+@FIX_COST+@PROCESS_COST AS TOTAL_COST,
            IFNULL((SELECT PN_JSON FROM PROCESS_NEED WHERE CG_IDX = PN_CG_IDX AND PN_TYPE = 'PROCESS' AND G_IDX = PN_G_IDX), '{}') AS PN_JSON,
            IFNULL(PP_JSON, '{}') AS PP_JSON
        FROM
            CHECK_GOODS
                LEFT JOIN CHECK_GROUP ON CGS_CG_IDX = CG_IDX
                LEFT JOIN GOODS ON CGS_G_IDX = G_IDX
                LEFT JOIN PO ON G_PO_IDX = PO_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PO_RECEIVED ON G_POR_IDX = POR_IDX
                LEFT JOIN PO_PRODUCT ON POR_PP_IDX = PP_IDX
                LEFT JOIN PROCESS_NEED ON CG_IDX = PN_CG_IDX
        WHERE
            CG_IDX = #{cgIdx}
        <if test="length != -1">
        LIMIT
            #{start}, #{length}
        </if>
    </select>

    <select id="countCheckGoods" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            CHECK_GROUP
                LEFT JOIN CHECK_GOODS ON CG_IDX = CGS_CG_IDX
                LEFT JOIN GOODS ON CGS_G_IDX = G_IDX
                LEFT JOIN PO ON G_PO_IDX = PO_IDX
                LEFT JOIN PROCESS_NEED ON PN_CG_IDX = CG_IDX AND G_IDX = PN_G_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
        WHERE
            CG_IDX = #{cgIdx}
    </select>

    <select id="selectReCheckGoods" resultType="Map">
        SELECT
            CG_IDX,
            CGS_IDX,
            P_IDX,
            G_STATE,
            P_NAME,
            G_IDX,
            G_IMEI,
            G_SERIAL,
            CGS_COST,
            G_MEMO,
            IFNULL(G_JSON, '{}') AS G_JSON,
            CATE_SPEC_LIST,
            IFNULL(PP_JSON, '{}') AS PP_JSON,
            PAINT.PN_JSON ->> '$.paintIdx' AS PAINT_IDX,
            PAINT.PN_JSON ->> '$.paintContent' AS PAINT_CONTENT,
            PAINT.PN_JSON ->> '$.paintCost' AS PAINT_COST,

            FIX.PN_JSON ->> '$.fixIdx' AS FIX_IDX,
            FIX.PN_JSON ->> '$.fixContent' AS FIX_CONTENT,
            FIX.PN_JSON ->> '$.fixCost' AS FIX_COST,

            PROCESS.PN_JSON ->> '$.processIdx' AS PROCESS_IDX,
            PROCESS.PN_JSON ->> '$.processContent' AS PROCESS_CONTENT,
            PROCESS.PN_JSON ->> '$.processCost' AS PROCESS_COST,

            IFNULL(PROCESS.PN_JSON, '{}') AS PN_JSON

        FROM
            CHECK_GROUP
                LEFT JOIN CHECK_GOODS ON CG_IDX = CGS_CG_IDX
                LEFT JOIN GOODS ON CGS_G_IDX = G_IDX
                LEFT JOIN PO_RECEIVED ON G_POR_IDX = POR_IDX
                LEFT JOIN PO_PRODUCT ON POR_PP_IDX = PP_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PO ON G_PO_IDX = PO_IDX
                LEFT JOIN PROCESS_NEED AS PAINT ON PAINT.PN_CGS_IDX = CGS_IDX AND PAINT.PN_TYPE = 'PAINT'
                LEFT JOIN PROCESS_NEED AS FIX ON FIX.PN_CGS_IDX = CGS_IDX AND FIX.PN_TYPE = 'FIX'
                LEFT JOIN PROCESS_NEED AS PROCESS ON PROCESS.PN_CGS_IDX = CGS_IDX AND PROCESS.PN_TYPE = 'PROCESS'
        WHERE
            CG_IDX = #{cgIdx}
    </select>

    <select id="countReCheckGoods" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            CHECK_GROUP
                LEFT JOIN CHECK_GOODS ON CG_IDX = CGS_CG_IDX
                LEFT JOIN GOODS ON CGS_G_IDX = G_IDX
                LEFT JOIN PO_RECEIVED ON G_POR_IDX = POR_IDX
                LEFT JOIN PO_PRODUCT ON POR_PP_IDX = PP_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PO ON G_PO_IDX = PO_IDX
        WHERE
            CG_IDX = #{cgIdx}
    </select>



    <sql id="includeProcessDataTable">
        <if test="gState != null and gState != ''">AND G_STATE = #{gState}</if>
        <if test="paintYn != null and paintYn != ''">AND IF(PN_PAINT.PN_STATE IS NULL, '', IF(PN_PAINT.PN_STATE = 'COMPLETE' OR PN_PAINT.PN_PROCESS = 'N', 'N', 'Y')) = #{paintYn}</if>
        <if test="fixYn != null and fixYn != ''">AND IF(PN_FIX.PN_STATE IS NULL, '', IF(PN_FIX.PN_STATE = 'COMPLETE' OR PN_FIX.PN_PROCESS = 'N', 'N', 'Y')) = #{fixYn} </if>
        <if test="processYn != null and processYn != ''">AND IF(PN_PROCESS.PN_STATE IS NULL, '', IF(PN_PROCESS.PN_STATE = 'COMPLETE' OR PN_PROCESS.PN_PROCESS = 'N', 'N', 'Y')) = #{processYn} </if>
        <if test="reYn != null and reYn != ''">AND G_JSON ->> '$.reProcess' = #{reYn} </if>
        <if test="gIdx != null and gIdx != ''">AND G_IDX LIKE CONCAT ('%', #{gIdx}, '%')</if>
    </sql>
    <select id="selectProcessDataTable" resultType="Map">
        SELECT
            G_IDX,
            G_STATE,
            G_JSON ->> '$.gStateId' AS G_ID,
            G_JSON ->> '$.gStateDate' AS G_DATE,
            G_BARCODE,
            P_IDX,
            P_NAME,
            G_JSON,
            PP_JSON,
            PP_JSON ->> '$.inSpec1' AS INSPEC1,
            G_JSON ->> '$.inSpec2' AS INSPEC2,
            PP_JSON ->> '$.sellSpec1' AS SELLSPEC1,
            G_JSON ->> '$.sellSpec2' AS SELLSPEC2,
            G_JSON ->> '$.pSpec1' AS PSPEC1,
            G_JSON ->> '$.pSpec2' AS PSPEC2,
            G_JSON ->> '$.sellSpec2Date' AS SELL_SPEC2_DATE,
            G_IMEI,
            G_SERIAL,
            PO_IDX,
            IN_CHECK.CG_IDX AS IN_CG_IDX,
            PN_PAINT.PN_PG_IDX AS PAINT_IDX,
            PN_FIX.PN_PG_IDX AS FIX_IDX,
            PN_PROCESS.PN_PG_IDX AS PROCESS_IDX,
            G_JSON ->> '$.reCgIdx' AS RE_CG_IDX,
            G_JSON ->> '$.pnContent' AS PN_CONTENT,
            G_JSON ->> '$.pnState' AS PN_STATE,
            G_JSON ->> '$.pnId' AS PN_ID,
            G_JSON ->> '$.pnDate' AS PN_DATE,
            IF(PN_PAINT.PN_STATE IS NULL, '', IF(PN_PAINT.PN_STATE = 'COMPLETE' OR PN_PAINT.PN_PROCESS = 'N', 'N', 'Y')) AS PAINT_PROCESS,
            IF(PN_FIX.PN_STATE IS NULL, '', IF(PN_FIX.PN_STATE = 'COMPLETE' OR PN_FIX.PN_PROCESS = 'N', 'N', 'Y')) AS FIX_PROCESS,
            IF(PN_PROCESS.PN_STATE IS NULL, '', IF(PN_PROCESS.PN_STATE = 'COMPLETE' OR PN_PROCESS.PN_PROCESS = 'N', 'N', 'Y')) AS PROCESS_PROCESS,
            G_JSON ->> '$.reProcess' AS RE_PROCESS,
            @PAINTCOST:=IFNULL(G_JSON ->> '$.paintCost', 0) AS PAINT_COST,
            G_JSON ->> '$.paintContent' AS PAINT_CONTENT,
            @FIXCOST:=G_JSON ->> '$.fixCost' AS FIX_COST,
            G_JSON >> '$.fixContent' AS FIX_CONTENT,
            @PROCESSCOST:=IFNULL(G_JSON ->> '$.processCost', 0) AS PROCESS_COST,
            G_JSON ->> '$.processContent' AS PROCESS_CONTENT,
            @PROCESSTOTALCOST:=@PAINTCOST+@FIXCOST+@PROCESSCOST AS PROCESS_TOTAL_COST,
            @PROCESSTOTALCOST + POR_COST AS TOTAL_COST,
            G_JSON ->> '$.checksId' AS CHECKS_ID,
            G_JSON ->> '$.checksDate' AS CHECKS_DATE,
            GS_CODE,
            GS_IDX,
            GS_NAME,
            GS_SALE,
            GS_RANK,
            IFNULL(CONCAT (G_OPTION ->> '$[0].title', ':', G_OPTION ->> '$[0].values'), '') AS G_OPTION1,
            IFNULL(CONCAT (G_OPTION ->> '$[1].title', ':', G_OPTION ->> '$[1].values'), '') AS G_OPTION2,
            IFNULL(CONCAT (G_OPTION ->> '$[2].title', ':', G_OPTION ->> '$[2].values'), '') AS G_OPTION3,
            GS_PRICE,
            POR_COST,
            G_JSON ->> '$.psCostSum' as PS_COST_SUM,
            G_JSON ->> '$.inCheckCost' AS RE_CG_IDX,
            G_JSON ->> '$.reCheckCost' AS RE_CG_IDX,
            @PAINTSUM:=G_JSON ->> '$.paintSum' AS PAINT_SUM,
            @FIXSUM:=G_JSON ->> '$.fisSum' AS FIX_SUM,
            @PROCESSSUM:=G_JSON ->> '$.processSum' AS PROCESS_SUM,
            @PAINTSUM + @FIXSUM + @PROCESSSUM+ POR_COST AS GOODS_SUM,
            WH_NAME,
            LOC_ZONE,
            LOC_ROW,
            LOC_COLUMN,
            LOC_BARCODE
        FROM
            GOODS
                LEFT JOIN PO_RECEIVED ON G_POR_IDX = POR_IDX
                LEFT JOIN PO_PRODUCT ON POR_PP_IDX = PP_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN LOCATION ON G_LOC_IDX = LOC_IDX
                LEFT JOIN WAREHOUSE ON LOC_WH_IDX = WH_IDX
                LEFT JOIN PO ON G_PO_IDX = PO_IDX
                LEFT JOIN IN_GROUP ON PO_IDX = IG_PO_IDX
                LEFT JOIN GOODS_STOCK ON G_GS_IDX = G_IDX

                LEFT JOIN PROCESS_NEED AS PN_PAINT ON G_IDX = PN_PAINT.PN_G_IDX AND PN_PAINT.PN_TYPE = 'PAINT'
                    AND PN_PAINT.PN_COUNT = (SELECT PN_COUNT FROM PROCESS_NEED WHERE G_IDX = PN_G_IDX AND PN_TYPE = 'PAINT' ORDER BY PN_IDX DESC LIMIT 1)

                LEFT JOIN PROCESS_NEED AS PN_FIX ON G_IDX = PN_FIX.PN_G_IDX AND PN_FIX.PN_TYPE = 'FIX'
                    AND PN_FIX.PN_COUNT = (SELECT PN_COUNT FROM PROCESS_NEED WHERE G_IDX = PN_G_IDX AND PN_TYPE = 'FIX' ORDER BY PN_IDX DESC LIMIT 1)

                LEFT JOIN PROCESS_NEED AS PN_PROCESS ON G_IDX = PN_PROCESS.PN_G_IDX
                    AND PN_PROCESS.PN_TYPE = 'PROCESS' AND PN_PROCESS.PN_COUNT = (SELECT PN_COUNT FROM PROCESS_NEED WHERE G_IDX = PN_G_IDX AND PN_TYPE = 'PROCESS' ORDER BY PN_IDX DESC LIMIT 1)

                LEFT JOIN CHECK_GOODS AS IN_CGS ON G_IDX = IN_CGS.CGS_G_IDX AND IN_CGS.CGS_TYPE = 'IN'
                LEFT JOIN CHECK_GROUP AS IN_CHECK ON IN_CGS.CGS_CG_IDX = IN_CHECK.CG_IDX
        <where>
            <include refid="includeProcessDataTable"></include>
        </where>
        ORDER BY
            G_IDX DESC
        <if test="length != -1">
        LIMIT
            #{start}, #{length}
        </if>
    </select>

    <select id="countProcessDataTable" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            GOODS
                LEFT JOIN PO_RECEIVED ON G_POR_IDX = POR_IDX
                LEFT JOIN PO_PRODUCT ON POR_PP_IDX = PP_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN LOCATION ON G_LOC_IDX = LOC_IDX
                LEFT JOIN WAREHOUSE ON LOC_WH_IDX = WH_IDX
                LEFT JOIN PO ON G_PO_IDX = PO_IDX
                LEFT JOIN IN_GROUP ON PO_IDX = IG_PO_IDX
                LEFT JOIN GOODS_STOCK ON G_GS_IDX = G_IDX

                LEFT JOIN PROCESS_NEED AS PN_PAINT ON G_IDX = PN_PAINT.PN_G_IDX AND PN_PAINT.PN_TYPE = 'PAINT'
                AND PN_PAINT.PN_COUNT = (SELECT PN_COUNT FROM PROCESS_NEED WHERE G_IDX = PN_G_IDX AND PN_TYPE = 'PAINT' ORDER BY PN_IDX DESC LIMIT 1)

                LEFT JOIN PROCESS_NEED AS PN_FIX ON G_IDX = PN_FIX.PN_G_IDX AND PN_FIX.PN_TYPE = 'FIX'
                AND PN_FIX.PN_COUNT = (SELECT PN_COUNT FROM PROCESS_NEED WHERE G_IDX = PN_G_IDX AND PN_TYPE = 'FIX' ORDER BY PN_IDX DESC LIMIT 1)

                LEFT JOIN PROCESS_NEED AS PN_PROCESS ON G_IDX = PN_PROCESS.PN_G_IDX
                AND PN_PROCESS.PN_TYPE = 'PROCESS' AND PN_PROCESS.PN_COUNT = (SELECT PN_COUNT FROM PROCESS_NEED WHERE G_IDX = PN_G_IDX AND PN_TYPE = 'PROCESS' ORDER BY PN_IDX DESC LIMIT 1)

                LEFT JOIN CHECK_GOODS AS IN_CGS ON G_IDX = IN_CGS.CGS_G_IDX AND IN_CGS.CGS_TYPE = 'IN'
                LEFT JOIN CHECK_GROUP AS IN_CHECK ON IN_CGS.CGS_CG_IDX = IN_CHECK.CG_IDX
        <where>
            <include refid="includeProcessDataTable"></include>
        </where>
    </select>

    <sql id="includeCheckGoodsDataTable">
        <if test="cgIdx != null and cgIdx != ''">AND CG_IDX = #{cgIdx}</if>
        <if test="poIdx != null and poIdx != ''">AND PO_IDX LIKE CONCAT ('%', #{poIdx}, '%')</if>
        <if test="pName != null and pName != ''">AND P_NAME LIKE CONCAT ('%', #{pName}, '%')</if>
        <if test="gBarcode != null and gBarcode != ''">AND G_BARCODE LIKE CONCAT ('%', #{gBarcode}, '%')</if>
        <if test="gIdx != null and gIdx != ''">AND G_IDX LIKE CONCAT ('%', #{gIdx}, '%')</if>
    </sql>

    <select id="selectCheckGoodsDataTable" resultType="Map">
        SELECT
            G_IDX,
            G_STATE,
            G_BARCODE,
            PO_IDX,
            P_IDX,
            P_NAME,
            P_COST,
            G_IMEI,
            G_JSON ->> '$.inSpec2' AS INSPEC2,
            CGS_JSON ->> '$.pSpec1' AS PSPEC1,

            IFNULL(CGS_JSON ->> '$.paintIdx',0) AS PAINT_IDX,
            CGS_JSON ->> '$.paintContent' AS PAINT_CONTENT,
            @PAINTCOST:=IFNULL(CGS_JSON ->> '$.paintCost',0) AS PAINT_COST,

            IFNULL(CGS_JSON ->> '$.fixIdx',0) AS FIX_IDX,
            CGS_JSON ->> '$.fixContent' AS FIX_CONTENT,
            @FIXCOST:=IFNULL(CGS_JSON ->> '$.fixCost',0) AS FIX_COST,

            IFNULL(CGS_JSON ->> '$.processIdx',0) AS PROCESS_IDX,
            CGS_JSON ->> '$.processContent' AS PROCESS_CONTENT,
            @PROCESSCOST:=IFNULL(CGS_JSON ->> '$.processCost',0) AS PROCESS_COST,

            @PAINTCOST+@FIXCOST+@PROCESSCOST AS TOTAL_COST,
            G_SERIAL,
            CGS_JSON,
            G_JSON,
            P_OPTION,
            G_OPTION,
            CATE_SPEC_LIST,
            G_MEMO,
            G_SERIAL,
            CGS_IDX,
            CGS_COST
        FROM
            CHECK_GROUP
                LEFT JOIN CHECK_GOODS ON CG_IDX = CGS_CG_IDX
                LEFT JOIN GOODS ON CGS_G_IDX = G_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PO ON G_PO_IDX = PO_IDX
        <where>
            <include refid="includeCheckGoodsDataTable"></include>
        </where>
        <if test="length!=-1">
        LIMIT
            #{start}, #{length}
        </if>
    </select>

    <select id="countCheckGoodsDataTable" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            CHECK_GROUP
                LEFT JOIN CHECK_GOODS ON CG_IDX = CGS_CG_IDX
                LEFT JOIN GOODS ON CGS_G_IDX = G_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PO ON G_PO_IDX = PO_IDX
        <where>
            <include refid="includeCheckGoodsDataTable"></include>
        </where>
    </select>

    <select id="selectAsCheckDatatable" resultType="Map">
        SELECT
            AS_IDX,
            AS_STATE,
            AS_DATE,
            P_IDX,
            P_NAME,
            G_IDX,
            G_IMEI,
            G_SERIAL,
            G_MEMO,
            CATE_SPEC_LIST,
            G_JSON,

            PROCESS.PN_JSON AS PN_JSON,

            PAINT.PN_IDX AS PAINT_IDX,
            PAINT.PN_CONTENT AS PAINT_CONTENT,
            PAINT.PN_EXPECTED_COST AS PAINT_COST,

            FIX.PN_IDX AS FIX_IDX,
            FIX.PN_CONTENT AS FIX_CONTENT,
            FIX.PN_EXPECTED_COST AS FIX_COST,

            PROCESS.PN_IDX AS PROCESS_IDX,
            PROCESS.PN_CONTENT AS PROCESS_CONTENT,
            PROCESS.PN_EXPECTED_COST AS PROCESS_COST,

            IF(PAINT.PN_STATE IS NULL, '', IF(PAINT.PN_STATE = 'COMPLETE' OR PAINT.PN_PROCESS = 'N', 'N', 'Y')) AS PAINT_PROCESS,
            IF(FIX.PN_STATE IS NULL, '', IF(FIX.PN_STATE = 'COMPLETE' OR FIX.PN_PROCESS = 'N', 'N', 'Y')) AS FIX_PROCESS,
            IF(PROCESS.PN_STATE IS NULL, '', IF(PROCESS.PN_STATE = 'COMPLETE' OR PROCESS.PN_PROCESS = 'N', 'N', 'Y')) AS PROCESS_PROCESS,
            PAINT.PN_EXPECTED_COST+FIX.PN_EXPECTED_COST+PROCESS.PN_EXPECTED_COST AS TOTAL_COST
        FROM
            AFTER_SERVICE
                LEFT JOIN GOODS ON AS_G_IDX = G_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PROCESS_NEED AS PAINT ON AS_IDX = PAINT.PN_AS_IDX AND PAINT.PN_TYPE = 'PAINT'
                LEFT JOIN PROCESS_NEED AS FIX ON AS_IDX = FIX.PN_AS_IDX AND FIX.PN_TYPE = 'FIX'
                LEFT JOIN PROCESS_NEED AS PROCESS ON AS_IDX = PROCESS.PN_AS_IDX AND PROCESS.PN_TYPE = 'PROCESS'
        WHERE
            G_IDX IS NOT NULL
        LIMIT
            #{start}, #{length}
    </select>

    <select id="countAsCheckDatatable" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            AFTER_SERVICE
                LEFT JOIN GOODS ON AS_G_IDX = G_IDX
                LEFT JOIN PRODUCT ON G_P_IDX = P_IDX
                LEFT JOIN CATEGORY ON P_CATE_IDX = CATE_IDX
                LEFT JOIN PROCESS_NEED AS PAINT ON AS_IDX = PAINT.PN_AS_IDX AND PAINT.PN_TYPE = 'PAINT'
                LEFT JOIN PROCESS_NEED AS FIX ON AS_IDX = FIX.PN_AS_IDX AND FIX.PN_TYPE = 'FIX'
                LEFT JOIN PROCESS_NEED AS PROCESS ON AS_IDX = PROCESS.PN_AS_IDX AND PROCESS.PN_TYPE = 'PROCESS'
        WHERE
            G_IDX IS NOT NULL
    </select>
</mapper>